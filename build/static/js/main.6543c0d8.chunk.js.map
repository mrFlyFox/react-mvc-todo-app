{"version":3,"sources":["components/Checkbox/Checkbox.jsx","components/Checkbox/index.js","components/DeleteButton/DeleteButton.jsx","components/List/List.jsx","components/List/index.js","components/Clear/Clear.jsx","components/Clear/index.js","components/Footer/Footer.jsx","components/Footer/index.js","components/Info/Info.jsx","App.js","serviceWorker.js","index.js"],"names":["Checkbox","onCompleted","this","props","react_default","a","createElement","className","onClick","type","Component","defaultProps","onChecked","DeleteButton","List","todoListItem","key","item","components_Checkbox","_this","bind","Object","assertThisInitialized","concat","completed","value","onDelete","_this2","todoList","map","Clear","_this$props","_this$props$value","onClear","length","Footer","state","selected","setFilter","filter","setState","onChangeFilter","console","log","isActive","showClear","clear","some","components_Clear","leftCount","href","Info","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","input","React","createRef","isToggleAll","changeFilter","handleSubmit","event","stopPropagation","preventDefault","_ref","toConsumableArray","todo","find","element","onSave","keyCode","target","onToggleAll","onChange","clearCompleted","e","unCompleted","footer","_this$state","filteringList","showToggle","components_Footer","htmlFor","onSubmit","placeholder","components_List","Info_Info","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6543c0d8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Checkbox extends Component {\r\n  render() {\r\n    const { onCompleted } = this.props;\r\n    return (\r\n      <input\r\n        className=\"App-input-checkbox\"\r\n        onClick={onCompleted}\r\n        type=\"checkbox\"\r\n      />\r\n    );\r\n  }\r\n}\r\nCheckbox.propTypes = {\r\n  onChecked: PropTypes.func.isRequired\r\n};\r\nCheckbox.defaultProps = {\r\n  onChecked: () => ({})\r\n};\r\n\r\nexport default Checkbox;\r\n","import Checkbox from './Checkbox';\r\n\r\nexport default Checkbox;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass DeleteButton extends Component {\r\n    render() {\r\n        const {onClick} = this.props;\r\n        return (\r\n            <button className=\"App-delete-btn\" onClick={onClick}></button>\r\n        )\r\n    }\r\n}\r\n\r\nDeleteButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    value: PropTypes.string\r\n};\r\nDeleteButton.defaultProps = {\r\n    onClick: () =>({})\r\n};\r\n\r\nexport default DeleteButton;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Checkbox from '../Checkbox';\r\nimport DeleteButton from '../DeleteButton';\r\n\r\nclass List extends Component {\r\n  todoListItem = (key, item) => {\r\n    return (\r\n      <li className=\"App-todo-element\" key={key}>\r\n        <div\r\n          className=\"App-checkbox-wrapper\"\r\n        >\r\n          <label className=\"App-todo-label\">\r\n            <Checkbox onCompleted={this.props.onCompleted.bind(this, item)} />\r\n            <span className={`App-todo-box ${item.completed ? 'box-completed' : ''}`} />\r\n          </label>\r\n        </div>\r\n        <p \r\n            className={`App-todo-text ${\r\n            item.completed ? 'completed' : ''\r\n          }`}>{item.value}\r\n        </p>\r\n        <button\r\n          type=\"button\"\r\n          className=\"App-delete-btn\"\r\n          onClick={this.props.onDelete.bind(this, key, item)}\r\n        />\r\n      </li>\r\n    );\r\n  };\r\n  render() {\r\n    const { todoList } = this.props;\r\n\r\n    return (\r\n      <ul className=\"App-todo-list\">\r\n        {todoList && todoList.map((item, key) => this.todoListItem(key, item))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nList.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  value: PropTypes.string\r\n};\r\nList.defaultProps = {\r\n  onClick: () => ({})\r\n};\r\n\r\nexport default List;\r\n","import List from './List';\r\n\r\nexport default List;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Clear extends Component {\r\n  \r\n  render() {\r\n    const {\r\n      value = 'Clear completed',\r\n      completed = false,\r\n      onClear,\r\n      todoList\r\n    } = this.props;\r\n    return (\r\n      todoList && todoList.length > 0 && (\r\n        <div className=\"clear-completed\">\r\n          <button onClick={onClear}>{value}</button>\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nClear.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  value: PropTypes.string\r\n};\r\n\r\nClear.defaultProps = {\r\n  onClick: () => ({})\r\n};\r\n\r\nexport default Clear;","import Clear from './Clear';\r\n\r\nexport default Clear;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Clear from '../Clear';\r\n\r\nclass Footer extends Component {\r\n    state = {\r\n        selected: 'all'\r\n    };\r\n    setFilter = (filter) => {\r\n        this.setState({selected: filter});\r\n        this.props.onChangeFilter(filter);\r\n        console.log(\"filter : state\", filter, this.state.selected);\r\n    }\r\n    isActive = (value) => {\r\n        return ((value == this.state.selected) ? 'selected' : '');\r\n    }\r\n    render() {\r\n        let showClear = null;\r\n        let clear = this.props.todoList.some((item) => item.completed == true);\r\n        console.log(\"clear: \", clear);\r\n        if (clear) {\r\n            showClear = <Clear todoList={this.props.todoList} onClear={this.props.onClear} /> ;\r\n        };\r\n        return (\r\n            <footer className=\"App-footer\">\r\n                <span className=\"App-todo-count\">\r\n                    <span>{this.props.leftCount}</span>\r\n                    <span> </span>\r\n                    <span>items </span>\r\n                    <span>left</span>\r\n                </span>\r\n                <ul className=\"App-filters\">\r\n                    <li>\r\n                        <a href=\"#\" className={this.isActive('all')} \r\n                                    onClick={this.setFilter.bind(this, 'all')}>\r\n                                    All\r\n                        </a>\r\n                        <span> </span>\r\n                        </li>\r\n                    <li>\r\n                        <a href=\"#\" className={this.isActive(false)} \r\n                                    onClick={this.setFilter.bind(this, false)}>\r\n                                    Active\r\n                        </a>\r\n                        <span> </span>\r\n                        </li>\r\n                    <li>\r\n                        <a href=\"#\" className={this.isActive(true)} \r\n                                    onClick={this.setFilter.bind(this, true)}>\r\n                                    Completed\r\n                        </a>\r\n                        <span></span>\r\n                        </li>\r\n                </ul>  \r\n                  {showClear}\r\n            </footer>\r\n        );\r\n    }\r\n}\r\nFooter.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    value: PropTypes.string\r\n  };\r\nFooter.defaultProps = {\r\n    onClick: () => ({})\r\n  };\r\n\r\nexport default Footer;","import Footer from './Footer';\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\n\r\nfunction Info() {\r\n    return (\r\n        <footer className=\"App-info\">\r\n            <p>Double-click to edit a todo</p>\r\n            <p>Created by  <a href=\"#\">LITS students</a></p>\r\n            <p>Part of sonething more <a href=\"\"></a></p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Info;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport List from './components/List';\r\nimport Footer from './components/Footer';\r\nimport Info from './components/Info/Info';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  input = React.createRef();\r\n\r\n  state = {\r\n    value: '',\r\n    completed: false,\r\n    todoList: [],\r\n    filter: 'all'\r\n  };\r\n  isToggleAll = false;\r\n  \r\n\r\n  changeFilter = (filter) => {\r\n    this.setState({filter: filter});\r\n  };\r\n\r\n  componentDidMount() {}\r\n  handleSubmit = event => {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    const { completed } = this.state;\r\n    if (this.state.value) {\r\n      this.setState(({ todoList, value }) => ({\r\n        todoList: [...todoList, { value, completed }],\r\n        value: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  onDelete = (key, item) => {\r\n    let todoList = this.state.todoList.filter(todo => todo !== item);\r\n    this.setState({ todoList });\r\n  };\r\n\r\n  onCompleted = (item, event) => {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    let { todoList } = this.state;\r\n    console.log('item :', item);\r\n    function isCompleted(element) {\r\n      if (element === item) {\r\n        element.completed = !element.completed;\r\n        return element;\r\n      }\r\n    }\r\n    todoList.find(isCompleted);\r\n    this.setState({ todoList });\r\n  };\r\n\r\n  onSave = (item, event) => {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    if (event.keyCode == 13) {\r\n      let { todoList } = this.state;\r\n      console.log('item: ', item);\r\n      function isSaved(element) {\r\n        if (element === item) {\r\n          element.value = event.target.value;\r\n          return element;\r\n        }\r\n      }\r\n      todoList.find(isSaved);\r\n      this.setState({todoList});\r\n    }\r\n  \r\n  }\r\n\r\n  onToggleAll = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    let todoList = this.state.todoList;\r\n    console.log(todoList);\r\n    if (this.isToggleAll == false) {\r\n    todoList.map(element => {\r\n      element.completed = true;\r\n        console.log(element.completed);\r\n    });\r\n    this.isToggleAll = true;\r\n  }\r\n  else {\r\n    todoList.map(element => {\r\n        element.completed = false;\r\n  });\r\n    this.isToggleAll = false;\r\n  }\r\n    this.setState({todoList});\r\n  }\r\n\r\n  onChange = event => {\r\n    this.setState({ value: event.target.value });\r\n  };\r\n\r\n  clearCompleted = e => {\r\n    e.preventDefault();\r\n    const { todoList } = this.state;\r\n    const unCompleted = todoList.filter(item => item.completed !== true);\r\n    this.setState({ todoList: unCompleted });\r\n    this.isToggleAll = false;\r\n  };\r\n\r\n\r\n  render() {\r\n    const { todoList, value } = this.state;\r\n    let filteringList = this.state.todoList;\r\n    let footer, showToggle = null;\r\n    if (this.state.filter != 'all') {\r\n    filteringList = filteringList.filter((item) => item.completed == this.state.filter);\r\n    }\r\n    let leftCount = this.state.todoList.filter((item) => item.completed == false);\r\n    console.log(leftCount.length);\r\n\r\n    if (todoList.length) {\r\n      footer = <Footer onChangeFilter={this.changeFilter}\r\n      leftCount={leftCount.length}\r\n      todoList={todoList}\r\n      onClear={this.clearCompleted}/>\r\n    };\r\n    if (todoList.length > 0) {\r\n          showToggle = <label htmlFor=\"\" \r\n                              className={`App-toggle-all ${this.isToggleAll ? ' Toggle-all-completed' : ''}`}\r\n                              onClick={this.onToggleAll}>\r\n                        </label> ;\r\n        };\r\n    return (\r\n      <div className=\"App\">\r\n        <form className=\"App-form\" onSubmit={this.handleSubmit}>\r\n          <header className=\"App-input-header\">\r\n            <h1 className=\"App-todo-header\">todos</h1>\r\n            {showToggle}\r\n            <input\r\n              placeholder=\"What needs to be done?\"\r\n              className=\"App-input-text\"\r\n              type=\"text\"\r\n              value={value}\r\n              onChange={this.onChange}\r\n            />\r\n          </header>\r\n          <List\r\n            todoList={filteringList}\r\n            leftCount={leftCount.length}\r\n            onDelete={this.onDelete}\r\n            onCompleted={this.onCompleted}\r\n          />\r\n        </form>\r\n        {footer}\r\n        <Info/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}